package lexer

class SchemeLexer extends Lexer[LexToken[Any]] {

  val file          = ???
  val form          = ???
  val expression    = ???
  val definition    = ???
  val constant      = ???
  val variable      = ???
  val identifier    = ???
  val procedureCall = ???
  val operator      = ???
  val operand       = ???
  val operands      = ???
  val quotation     = ???
  val datum         = ???
  val quote         = ???
  val body          = ???
  val callPattern   = ???
  val pattern       = ???
  val boundVarList  = ???
  val test          = ???
  val consequent    = ???
  val alternate     = ???
  val condClause    = ???
  val caseClause    = ???
  val bindingSpec   = ???
  val iterationSpec = ???

  val lambda   = ???
  val `if`     = ???
  val `ifElse` = ???
  val cond     = ???
  val condElse = ???
  val and      = ???
  val or       = ???
  val `case`   = ???
  val let      = ???
  val letrec   = ???
  val rec      = ???
  val begin    = ???
  val sequence = ???
  val `do`     = ???
  val delay    = ???

  override def apply() = ???

  override def lex(code: String) = ???

  override type Elem = this.type
}
